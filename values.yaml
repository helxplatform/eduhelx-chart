# Default values for eduhelx-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

student-helx:
  # -- enable/disable deployment of the student deployment of HeLx 
  enabled: true
  global:
    stdnfsPvc: studentnfs
  ambassador:
    image:
      repository: containers.renci.org/helxplatform/ambassador
      tag: latest
    securityContext:
      # -- Set these options when deploying to openshift. Defaults seen here.
      # runAsUser: 8888
      # runAsGroup: ""
      # fsGroup: ""
  appstore:
    image:
      tag: v3.3.0
    ACCOUNT_DEFAULT_HTTP_PROTOCOL: https
    djangoSettings: eduhelx-dev
    django:
      APPSTORE_DJANGO_PASSWORD: "<change-me>"
      ALLOW_SAML_LOGIN: true
      DEV_PHASE: prod
      EMAIL_HOST_PASSWORD: "<change-me>"
      EMAIL_HOST_USER: appstore@renci.org
      AUTHORIZED_USERS: |
        tcheek@renci.org
        pjl@unc.edu
        pjl@renci.org
        bennettc@renci.org
        cnbiii@email.unc.edu
        hinashah@renci.org
        isma@email.unc.edu
        jeffw@renci.org
        jseals@renci.org
        hpatel@renci.org
    fetcherImage:
      repository: containers.renci.org/helxplatform/url-fetch
    imagePostgresql:
      repository: containers.renci.org/helxplatform/third-party/postgres
      tag: latest
    tycho:
      externalAppRegistryBranch: eduhelx-dev
      externalAppRegistryEnabled: true
      runAsUser: 30000
      runAsGroup: 1136
      fsGroup: 1136
    # -- This security context is used for the appstore pod, not pods created by appstore. Tycho manages 
    # the pods created by appstore.
    podSecurityContext:
      runAsNonRoot: true
      runAsGroup: 1000
      runAsUser: 1000
      # fsGroup:
    db:
      host: student-postgresql
    postgresql:
      auth:
        existingSecret: student-appstore-postgresql
      image:
        registry: containers.renci.org
        repository: helxplatform/third-party/postgres
        tag: latest
      primary:
        persistence:
          size: 2Gi
      securityContext:
        enabled: true
        runAsUser: 1000
    resources:
      limits:
        cpu: 1
        memory: 1024Mi
      requests:
        cpu: 1
        memory: 1024Mi
    saml:
      AUTHORITY_URL: "https://sso.unc.edu/metadata/unc"
      ASSERTION_URL: https://<change-me>
      ENTITY_ID: "https://<change-me>/saml2_auth/acs/"
      cache:
        enabled: true
        storageSize: "50M"
        FETCH_INTERVAL: 3600000
    gitea:
      enabled: true
      host: "<change-me>"

professor-helx:
  # -- enable/disable deployment of the professor deployment of HeLx 
  enabled: true
  global:
    stdnfsPvc: studentnfs
  ambassador:
    image:
      repository: containers.renci.org/helxplatform/ambassador
      tag: latest
    securityContext:
      # -- Set these options when deploying to openshift. Defaults seen here.
      # runAsUser: 8888
      # runAsGroup: ""
      # fsGroup: ""
  appstore:
    image:
      tag: v3.3.0
    ACCOUNT_DEFAULT_HTTP_PROTOCOL: https
    djangoSettings: eduhelx-dev
    django:
      APPSTORE_DJANGO_PASSWORD: "<change-me>"
      ALLOW_SAML_LOGIN: true
      DEV_PHASE: prod
      EMAIL_HOST_PASSWORD: "<change-me>"
      EMAIL_HOST_USER: appstore@renci.org
      AUTHORIZED_USERS: |
        tcheek@renci.org
        pjl@unc.edu
        pjl@renci.org
        bennettc@renci.org
        cnbiii@email.unc.edu
        hinashah@renci.org
        isma@email.unc.edu
        jeffw@renci.org
        jseals@renci.org
        hpatel@renci.org
    fetcherImage:
      repository: containers.renci.org/helxplatform/url-fetch
    imagePostgresql:
      repository: containers.renci.org/helxplatform/third-party/postgres
      tag: latest
    tycho:
      externalAppRegistryBranch: eduhelx-dev
      externalAppRegistryEnabled: true
      runAsUser: 30000
      runAsGroup: 1136
      fsGroup: 1136
    # -- This security context is used for the appstore pod, not pods created by appstore. Tycho manages 
    # the pods created by appstore.
    podSecurityContext:
      runAsNonRoot: true
      runAsGroup: 1000
      runAsUser: 1000
      # fsGroup:
    db:
      host: professor-postgresql
    postgresql:
      auth:
        existingSecret: professor-appstore-postgresql
      image:
        registry: containers.renci.org
        repository: helxplatform/third-party/postgres
        tag: latest
      primary:
        persistence:
          size: 2Gi
      securityContext:
        enabled: true
        runAsUser: 1000
    resources:
      limits:
        cpu: 1
        memory: 1024Mi
      requests:
        cpu: 1
        memory: 1024Mi
    saml:
      AUTHORITY_URL: "https://sso.unc.edu/metadata/unc"
      ASSERTION_URL: https://<change-me>
      ENTITY_ID: "https://<change-me>/saml2_auth/acs/"
      cache:
        enabled: true
        storageSize: "50M"
        FETCH_INTERVAL: 3600000
    gitea:
      enabled: true
      host: "<change-me>"

grader-api:
  # -- enable/disable deployment of the EduHeLx Grader API
  enabled: true
  config:
    data:
      # -- Change this to "prod" when deploying to production. Default is "dev".
      # DEV_PHASE: "dev"
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000

gitea:
  # -- enable/disable deployment of the Gitea service
  enabled: true
  gitea:
    actionsRunner:
      enabled: true
    admin:
      email: "<change-me>"
      password: "<change-me>"
      username: gitea_admin
    config:
      config:
        ENABLED: "true"
      server:
        DOMAIN: "<change-me>"
        ROOT_URL: "<change-me>"
      webhook:
        ALLOWED_HOST_LIST: "gitea-assist"
      database:
        DB_TYPE: postgres
      session:
        PROVIDER: db
      cache:
        ADAPTER: memory
    additionalConfigSources:
    - configMap:
        name: gitea-env
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
    className: null
    enabled: true
    hosts:
    - host: "<change-me>"
      paths:
      - path: /
        pathType: Prefix
    tls:
    - hosts:
      - "<change-me>"
      secretName: "<change-me>-tls"
  persistence:
    size: 8Gi
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 512Mi
  postgresql-ha:
    enabled: false
  postgresql:
    enabled: true
    auth:
      # -- This has to exclude the release name because we don't know the release name at the time of writing the 
      # values file. The result is that, effectively, only one eduhelx-chart can be deployed per namespace because
      # secrets like these will collide.
      existingSecret: gitea-postgresql


gitea-assist:
  # -- enable/disable deployment of the Gitea Assist service
  enabled: true
  config:
    data:
      gitea-api-url: "<change-me>"